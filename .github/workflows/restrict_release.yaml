# name: Restrict Releases to Specific Branch

# on:
#   release:
#     types: [created]

# jobs:
#   check_release_branch:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Get Release Information
#         run: echo "Release created from commit ${{ github.event.release.target_commitish }}"

#       - name: Check if release is from the allowed branch
#         run: |
#           ALLOWED_BRANCH="release"
#           RELEASE_BRANCH=${{ github.event.release.target_commitish }}

#           if [ "$RELEASE_BRANCH" != "$ALLOWED_BRANCH" ]; then
#             echo "‚ùå Releases are only allowed from the '$ALLOWED_BRANCH' branch."
#             exit 1
#           fi



name: Restrict Releases to Specific Branch

on:
  release:
    types: [created]

jobs:
  check_release_branch:
    runs-on: ubuntu-latest
    steps:
      - name: Get Release Information
        run: echo "Release created from commit ${{ github.event.release.target_commitish }}"

      - name: Check if release is from an allowed branch
        run: |
          ALLOWED_BRANCH="main"  # Ë®±ÂèØ„Åô„Çã„Éñ„É©„É≥„ÉÅ„ÇíÊåáÂÆö
          RELEASE_BRANCH=${{ github.event.release.target_commitish }}

          if [ "$RELEASE_BRANCH" != "$ALLOWED_BRANCH" ]; then
            echo "‚ùå Releases are only allowed from the '$ALLOWED_BRANCH' branch."
            exit 1
          fi

  delete_unauthorized_release:
    needs: check_release_branch
    if: failure()  # Ë®±ÂèØ„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑ„Éñ„É©„É≥„ÉÅ„ÅÆÂ†¥Âêà„ÅÆ„ÅøÂÆüË°å
    runs-on: ubuntu-latest
    steps:
      - name: Delete Unauthorized Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_ID=${{ github.event.release.id }}
          curl -X DELETE -H "Authorization: token $GITHUB_TOKEN" \
               "https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID"
          echo "üö® Unauthorized release deleted."
